<!DOCTYPE html>
<html>
  <head>
    <title>Marvel Wiki Search Result</title>
    <link rel="stylesheet" type="text/css" href="/css/result.css" />
  </head>
  <body>
    <div class="back-to-search">
      <a href="/search">
        <button>Back to Search</button>
      </a>
    </div>

    <h4>You have researched <%= characterName %> in Marvel Wiki</h4>

    <% if (notFound) { %>
    <div>
      <p>
        <i>
          It seems that the character is not from Marvel Universe, please check
          your typo.
        </i>
      </p>
    </div>
    <% } else { %>
    <div>
      <p class="character-name"><%= name %></p>

      <% if (description) { %>
      <p><%= description %></p>
      <% } else { %>
      <p><i>No description has been provided</i></p>
      <% } %>

      <h2>List of <%= totalComics %> Comics</h2>

      <ul>
        <% comics.forEach(comic => { %>
        <li>
          <h3><%= comic.title %></h3>
          <% if (comic.description) { %>
          <p><%= comic.description %></p>
          <% } else { %>
          <p><i>No description has been provided</i></p>
          <% } %>
        </li>
        <% }); %>
      </ul>

      <% if (totalComics > limitComics) { %>
      <div>
        <button onclick="previousPage()">Previous</button>
        <button onclick="nextPage()">Next</button>
      </div>
      <% } %>
    </div>

    <% } %>

    <script>
      let offset = 0;
      const limit = <%= typeof limitComics !== 'undefined' ? limitComics : 0 %>;
      const total = <%= typeof totalComics !== 'undefined' ? totalComics : 0 %>;
      const charID = <%= typeof charID !== 'undefined' ? charID : 0 %>;

      function previousPage() {
        offset = Math.max(offset - limit, 0);
        fetchComicsData();
      }

      function nextPage() {
        offset = offset + limit;
        fetchComicsData();
      }

      async function fetchComicsData() {
        const response = await fetch(
          `/api/comics?id=${charID}&offset=${offset}&limit=${limit}`
        );
        const data = await response.json();

        updateComicsList(data);
      }

      function updateComicsList(data) {
        const comicsList = document.querySelector("ul");
        comicsList.innerHTML = "";

        data.comics.forEach((comic) => {
          const li = document.createElement("li");
          const h3 = document.createElement("h3");
          const p = document.createElement("p");

          h3.textContent = comic.title;
          if (comic.description) {
            p.textContent = comic.description;
          } else {
            const i = document.createElement("i");
            i.textContent = "No description has been provided";
            p.appendChild(i);
          }

          li.appendChild(h3);
          li.appendChild(p);
          comicsList.appendChild(li);
        });

        updateButtonState();
      }

      function updateButtonState() {
        // Update the button state
        const prevBtn = document.querySelector(
          "button[onclick='previousPage()']"
        );
        const nextBtn = document.querySelector("button[onclick='nextPage()']");
        prevBtn.disabled = offset === 0;
        nextBtn.disabled = offset >= total - limit;
      }

      document.addEventListener("DOMContentLoaded", () => {
        updateButtonState();
      });
    </script>
  </body>
</html>
